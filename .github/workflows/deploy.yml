name: ci

on:
  push:
    branches: [main]

env:
  GITHUB_TOKEN: ${{ github.token }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  get-next-version:
    permissions:
      contents: write
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: npm ci
      - run: npx semantic-release --dry-run
        id: get-next-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      new-release-published: ${{ steps.get-next-version.outputs.new-release-published }}
      new-release-version: ${{ steps.get-next-version.outputs.new-release-version }}

  build:
    runs-on: ubuntu-latest
    needs: get-next-version
    if: needs.get-next-version.outputs.new-release-published == 'true'
    steps:
      - uses: actions/checkout@v3
      - run: echo "The new release version is ${{ needs.get-next-version.outputs.new-release-version }}" && npm run build-interop && echo "Build complete"

#  release:
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-node@v3
#        with:
#          node-version: 16
#      - run: npm ci
#      - run: npx semantic-release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}